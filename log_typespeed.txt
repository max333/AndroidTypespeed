+ There can be pauses with no words on screen.  Should force the

+ Add the score in MainActivity: the total number of valid characters.
  Do something special if the high score is breached.

+ Make "Enter" a valid word termination key, on top of "Space".

+ (Completely different game) Some sort of strategy game where the choice
  of which word to type first is important.
  Tetris (Carlos's idea)?

+ fade and spin words when they are done (typed or hit the wall).
  Blue or red.
  
+ Fluid dynamics.
  Words apply force on fluid when active, and feel force from fluid when done.
  Could separate the letters as independent objects, or pixels become point particles. 
  Need at least two interaction
  points per object on which the fluid acts to get rotation.

+ text-to-speech?

+ lock screen orientation.
  Essential now since otherwise the word length (used to check when it hits the wall) would be invalid after a flip.

+ display keyboard at all times instead of activating it by having the focus in the EditView.

+ Do not let the View stop the screen for shutting down.  But maybe leave it as such
  for development.

+ Save to DB all game parameters, including the word file (with md5sum) and random seed.
  All missed and successful words, and words that reached the end of the file.
  Error types (difficult to define and to know which word was attempted).


+ When the user touches anywhere after the game over dialog appears, it disappears.
  Would be simpler to have an Activity instead of a Dialog on game over.
  Should be a WebView.  Could make a fancy page with angular.js; all the output data could be
  sent (just string substitution in some header) to the page as a json object.
  It might actually be possible too to write a javascript function that gets that data from Java code.

+ when typing long words in EditView, it only shows the last chars.

+ Database of games (GSON? non-searchable, or parts as GSON?):
  word file (with possible options)(language of phone?), random seed(s), cps, total time, successful words (with time), erroneous words (with time)
  hardware/software keyboard (name of software keyboard).
  (later: when the back key was pressed).
  (later: db transfer to GAE, every game at first, but if player plays often, every few games.
          no transfer if battery is low.  Need to keep in Android DB the status if was sent to 
          GAE or in transit.)
+ Stats to output at game over:
  cps/wpm
  rank relative to high scores (same game type).
  average word length, average successful word length.
  wrong words. 
          
+ (later) sharing with friends.

+ Make better word list.  Remove beforehand the "[word]'s" instead of filtering.
  Also filter out morally unacceptable words.
  
+ Words overlap.  Maybe not possible to avoid, but should minimize.
  Should rescale the y-dimension since some words can be too low (true?).
  Should split the screen in lines, from ascent value and keep track of the 
  order in which they were used.
  Or try 3 random placements and compute the overlap and keep if 0 or take the one with less overlap.
  
+ Settings to remove sound.
  Also, is it possible to remove the keyboard sound?  
  Could make different sound when a submitted word is accepted or not.

  
+ StatusView should have "x" icons with a background that becomes redder.


+ High scores, separated by speed level.

+ Settings: 
    -color pickers (background/text). Might need a third color if typed characters are shown.
    -speed
    -text size, font (but maybe just give some vague options for size and mostly have it be
     automatically computed from the screen size).
    
+ Sound effects: change the pitch of the error as we get closer to the limit.  

+ Haptic effect.

+ Pseudo-antialiasing.

+ It seems there already is an ActionBar although I did not configure it.  
  Probably would look different on older devices.
  Maybe fine as it is.

+ Pause (user request, or phone call...).  Should save the full game state (GSON?).
  What if the orientation changed... are the rules even the same?
  The number of lines are going to be different.

+ Maybe let users use their own word file, different languages (right-to-left).

+ Make an "About" about the history and link to code on github.
  Creative commons attribution if needed.
  As WebView.

+ Game variant: mirror (reversed words and text flowing the "wrong" way).
  The configuration could also be used for internationalization.

+ Game variant: Add numbers or symbols to words.
  
+ On my phone, keyboard sometimes suggest to add new word to dictionary.
  Maybe there is some way to control this.  
  I already eliminated the suggestions as an option.

+ On my phone, landscape orientation does not show the view above the keyboard, but just
  add a white box to type text since it seems there is not enough space.
  InputMethodService.isFullScreenMode().
  Can fullscreen mode be disabled?
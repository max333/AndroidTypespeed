+ When the user touches anywhere after the game over dialog appears, it disappears.
  Would be simpler to have an Activity instead of a Dialog on game over.
  Should be a WebView.  Could make a fancy page with angular.js; all the output data could be
  sent (just string substitution in some header) to the page as a json object.
  It might actually be possible too to write a javascript function that gets that data from Java code.

+ when typing long words in EditView, it only shows the last chars.

+ Database of games (GSON? non-searchable, or parts as GSON?):
  word file (with possible options)(language of phone?), random seed(s), cps, total time, successful words (with time), erroneous words (with time)
  hardware/software keyboard (name of software keyboard).
  (later: when the back key was pressed).
  (later: db transfer to GAE, every game at first, but if player plays often, every few games.
          no transfer if battery is low.  Need to keep in Android DB the status if was sent to 
          GAE or in transit.)
+ Stats to output at game over:
  cps/wpm
  rank relative to high scores (same game type).
  average word length, average successful word length.
  wrong words. 
          
+ (later) sharing with friends.

+ Make better word list.  Remove beforehand the "[word]'s" instead of filtering.
  Also filter out morally unacceptable words.
  
+ Words overlap.  Maybe not possible to avoid, but should minimize.
  Should rescale the y-dimension since some words can be too low (true?).
  Should split the screen in lines, from ascent value and keep track of the 
  order in which they were used.
  Or try 3 random placements and compute the overlap and keep if 0 or take the one with less overlap.
  
+ Settings to remove sound.
  Also, is it possible to remove the keyboard sound?  
  Could make different sound when a submitted word is accepted or not.

  
+ StatusView should have "x" icons with a background that becomes redder.

+ Modify OutOfBounds such that it checks for the right side of the word getting out
  instead of the left.  Will also need to modify the speed of each word depending on its width
  if each word is to spend the same time on screen.


+ High scores, separated by speed level.

+ Settings: 
    -color pickers (background/text). Might need a third color if typed characters are shown.
    -speed
    -text size, font (but maybe just give some vague options for size and mostly have it be
     automatically computed from the screen size).
    
+ Sound effects: change the pitch of the error as we get closer to the limit.  

+ Haptic effect.

+ Pseudo-antialiasing.

+ It seems there already is an ActionBar although I did not configure it.  
  Probably would look different on older devices.
  Maybe fine as it is.

+ Pause (user request, or phone call...).  Should save the full game state (GSON?).
  What if the orientation changed... are the rules even the same?
  The number of lines are going to be different.

+ Will need to find some list of words.  Maybe many languages.
  Maybe let users use their own file.

+ Make an "About" about the history and link to code on github.
  Creative commons attribution if needed.
  As WebView.
  Donation.

+ Game variant: mirror (reversed words and text flowing the "wrong" way).
  The configuration could also be used for internationalization.

+ Game variant: Add numbers or symbols to words.
  
+ Target api 2.3 since I read somewhere in Android Pro 4 about proguard or such being
  setup only for that version and higher.
  
+ On my phone, keyboard sometimes suggest to add new word to dictionary.
  Maybe there is some way to control this.  
  I already eliminated the suggestions as an option.

+ On my phone, landscape orientation does not show the view above the keyboard, but just
  add a white box to type text since it seems there is not enough space.
  InputMethodService.isFullScreenMode().
  Can fullscreen mode be disabled?